#!/usr/bin/php

<?php


try {

    // only router.php if cli-server
    // if (php_sapi_name() == 'cli-server') {
            
    //     $info = parse_url($_SERVER['REQUEST_URI']);

    //     if (file_exists( "./$info[path]")) {
    //         return false;
    //     } else {
    //         include_once "index.php";
    //         return true;
    //     }
    // }

    /**
     * Checking OS
     */

    if (PHP_OS !== 'Linux') {
        throw new Exception("Callisto supports only Linux");
    }

    /**
     * Checking PHP version
     */
    if (version_compare(phpversion(), '7.0.0', '<') === true) {
        throw new Exception("Whoops, it looks like you have an invalid PHP version. Callisto supports PHP 7.0.0 or newer.");
    }
    
    $result = '';

    $options = getopt('sobv', array('serve', 'open', 'build', 'version'));

    // var_dump($options);

    if (isset($options['v']) || isset($options['version'])) {
        echo "\n \033[32m Alpha  0.0.1 \033[0m \n";
    }

    if (isset($options['b']) || isset($options['build'])) {

        require_once 'vendor/autoload.php';

        function rrmdir($path){
            if (is_dir($path)) {
                array_map( "rrmdir", glob($path . DIRECTORY_SEPARATOR . '{,.[!.]}*', GLOB_BRACE) );
                @rmdir($path);
            }
            else {
                @unlink($path);
            }
        }

        $dir = "public";

        rrmdir($dir);
        mkdir($dir);

        $loader = new Twig_Loader_Filesystem('/');
        $twig   = new Twig_Environment($loader);

        $files = [
                "index.html" => [
                    "title"         => "Callisto",
                    "keywords"      => "",
                    "description"   => ""
                ],
                "about.html" => [
                    "title"         => "About",
                    "keywords"      => "",
                    "description"   => ""
                ],
                "404.html" => [
                    "title"         => "404",
                    "keywords"      => "",
                    "description"   => ""
                ],
        ];

        foreach ($files as $file => $data) {
            file_put_contents("public/" . $file, $twig->render($file, $data), LOCK_EX);
        }

        echo PHP_EOL;
        return false;
    }
      
    
    $ip   = '127.0.0.1';
    $port = '8080';
    
    $command = sprintf('php -S %s:%s router.php', $ip, $port);

    printf ("\n Server started at http://%s:%s \n", $ip, $port);

    // $command = sprintf('php -S %s:%s public/index.html', $ip, $port);

    if (isset($options['o']) || isset($options['open'])) {
        $command = $command . sprintf(' & xdg-open "http://%s:%s/"', $ip, $port);
    }

    if (isset($options['s']) || isset($options['serve'])) {
        system(
            $command,
            $result
        );
    }


} catch (Exception $e) {
    echo "\n Error: ". $e->getMessage() . "\n";
}
